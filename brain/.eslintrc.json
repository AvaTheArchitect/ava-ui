{
  "extends": ["@typescript-eslint/recommended", "prettier"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    // âœ… FIXED: Allow 'any' in brain modules (no more warnings!)
    "@typescript-eslint/no-explicit-any": "off",

    // Reduce noise for brain module development
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_",
        "ignoreRestSiblings": true,
        "args": "after-used"
      }
    ],

    // Allow unused imports (common in interface-heavy code)
    "@typescript-eslint/no-unused-imports": "off",

    // Relax some rules for AI/ML development
    "@typescript-eslint/ban-ts-comment": [
      "warn",
      {
        "ts-ignore": "allow-with-description",
        "ts-expect-error": "allow-with-description"
      }
    ],

    // Allow empty interfaces (common for extensible types)
    "@typescript-eslint/no-empty-interface": [
      "warn",
      {
        "allowSingleExtends": true
      }
    ],

    // Allow require statements for dynamic imports
    "@typescript-eslint/no-var-requires": "warn",

    // Console statements allowed in brain modules (lots of logging)
    "no-console": "off",

    // Allow non-null assertions (common in audio processing)
    "@typescript-eslint/no-non-null-assertion": "warn",

    // Prefer interfaces but allow type aliases
    "@typescript-eslint/consistent-type-definitions": "off",

    // Allow empty functions (common for placeholder methods)
    "@typescript-eslint/no-empty-function": [
      "warn",
      {
        "allow": [
          "private-constructors",
          "protected-constructors",
          "decoratedFunctions"
        ]
      }
    ],

    // Allow promise without await in specific contexts
    "@typescript-eslint/no-floating-promises": "warn",

    // Naming conventions for brain modules
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I", ""]
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      },
      {
        "selector": "method",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      }
    ]
  },

  // Ignore patterns for brain module
  "ignorePatterns": [
    "dist/",
    "node_modules/",
    "*.test.ts",
    "*.spec.ts",
    "**/*.d.ts",
    "temp/",
    "cache/"
  ],

  // Environment settings
  "env": {
    "node": true,
    "es2020": true,
    "browser": true
  },

  // Global variables for brain modules
  "globals": {
    "AudioContext": "readonly",
    "webkitAudioContext": "readonly",
    "process": "readonly"
  }
}
